<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Haskell on Noahlias's Blog</title><link>https://noahlias.github.io/categories/haskell/</link><description>Recent content in Haskell on Noahlias's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 31 Jul 2023 15:01:51 +0800</lastBuildDate><atom:link href="https://noahlias.github.io/categories/haskell/index.xml" rel="self" type="application/rss+xml"/><item><title>Day 3:Spiral Memory</title><link>https://noahlias.github.io/post/haskell_practice_day_3/</link><pubDate>Mon, 31 Jul 2023 15:01:51 +0800</pubDate><guid>https://noahlias.github.io/post/haskell_practice_day_3/</guid><description>Day3 螺旋记忆，这个标题就很有意思，实际它的实现也很有意思 Part 1 第一部分大致讲解了就是一个螺旋的情况, 我用手绘图描述一下,基本就懂了 其实转换为一个</description></item><item><title>Day 2: Corruption Checksum</title><link>https://noahlias.github.io/post/haskell_practice_day_2/</link><pubDate>Mon, 31 Jul 2023 14:51:48 +0800</pubDate><guid>https://noahlias.github.io/post/haskell_practice_day_2/</guid><description>Day2 校验和这个标题很符合这个第一部分题目 Part 1 第一个问题就是找出二维数组里面的每一个元素最大和最小元素的差之后做个统计下 具体实现: 1 2 3 4 preprocessing :: [Char]</description></item><item><title>Day 1:Inverse Captcha</title><link>https://noahlias.github.io/post/haskell_practice_day_1/</link><pubDate>Mon, 31 Jul 2023 11:53:27 +0800</pubDate><guid>https://noahlias.github.io/post/haskell_practice_day_1/</guid><description>Day1 好久没做题了,这次是一次函数式编程语言的回归与练习 Part 1 第一部分大致讲解了就是一个旋转的情况, 我用手绘图描述一下,基本就懂了 具体实现: 1 2 3</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Alias's Blog</title><link>https://noahlias.github.io/post/</link><description>Recent content in Posts on Alias's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 03 Dec 2022 01:00:03 +0800</lastBuildDate><atom:link href="https://noahlias.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Day 1:Calorie Counting</title><link>https://noahlias.github.io/post/adventofcode_1/</link><pubDate>Sat, 03 Dec 2022 01:00:03 +0800</pubDate><guid>https://noahlias.github.io/post/adventofcode_1/</guid><description>Day1 描述 大意就是给出如下的数据代表不同的食物消耗的卡路里(Calories) 样例: 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 第一部分 一共是$1000+2000+30</description></item><item><title>Day 2:Rock Paper Scissors</title><link>https://noahlias.github.io/post/adventofcode_2/</link><pubDate>Sat, 03 Dec 2022 01:00:03 +0800</pubDate><guid>https://noahlias.github.io/post/adventofcode_2/</guid><description>Day2 描述 大意就是石头剪刀布这个游戏分为对手和你 得分分为 你出手的形状得分 和最终胜利时的得分总和 出手形状得分: 石头:1分 布: 2分 剪刀:3分 胜利得分</description></item><item><title>Day 3: Rucksack Reorganization</title><link>https://noahlias.github.io/post/adventofcode_3/</link><pubDate>Sat, 03 Dec 2022 01:00:03 +0800</pubDate><guid>https://noahlias.github.io/post/adventofcode_3/</guid><description>Day3 第一部分 大意就是给出下面的字符串,每个字符串等分为 2 个部分 找出第一部分和第二部分 共有的字符 字符串样例: vJrwpWtwJgWrhcsFMMfFFhFp jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL PmmdzqPrVvPwwTWBwg wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn ttgJtRGJQctTZtZT CrZsJsPPZsGzwwsLwLmpwMDw 第一个字符串 第一部分是v</description></item><item><title>Combinatoric selections</title><link>https://noahlias.github.io/post/euler_53/</link><pubDate>Fri, 02 Dec 2022 19:41:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_53/</guid><description>Problem 53 Description There are exactly ten ways of selecting three from five, 12345: 123, 124, 125, 134, 135, 145, 234, 235, 245, and 345 In combinatorics, we use the notation,$\displaystyle \binom 5 3 = 10$ . In general,$\displaystyle \binom n r = \dfrac{n!}{r!(n-r)!}$ , where $r \le n$, $n! = n \times (n-1) \times &amp;hellip; \times 3 \times 2 \times 1$, and $0! = 1$. It is not until</description></item><item><title>Permuted multiples</title><link>https://noahlias.github.io/post/euler_52/</link><pubDate>Fri, 02 Dec 2022 19:41:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_52/</guid><description>Problem 52
Description It can be seen that the number, 125874, and its double, 251748, contain exactly the same digits, but in a different order.
Find the smallest positive integer, x, such that 2x, 3x, 4x, 5x, and 6x, contain the same digits.
Solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def solution(): for i in range(1, 1000000): a = str(i * 2) b = str(i * 3) c = str(i * 4) d = str(i * 5) e = str(i * 6) if ( sorted(a) == sorted(b) and sorted(a) == sorted(c) and sorted(a) == sorted(d) and sorted(a) == sorted(e) ): return i Summary It limit the number range to one billion.</description></item><item><title>Number spiral diagonals</title><link>https://noahlias.github.io/post/euler_28/</link><pubDate>Wed, 30 Nov 2022 11:02:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_28/</guid><description>Problem 28 Description Starting with the number 1 and moving to the right in a clockwise direction a 5 by 5 spiral is formed as follows: 21 22 23 24 25 20 7 8 9 10 19 6 1 2 11 18 5 4 3 12 17 16 15 14 13 It can be verified that the sum of the numbers on the diagonals is 101. What is the sum</description></item><item><title>Largest product in a grid</title><link>https://noahlias.github.io/post/euler_11/</link><pubDate>Wed, 23 Nov 2022 10:48:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_11/</guid><description>Problem 11 Description In the 20×20 grid below, four numbers along a diagonal line have been marked in red. The product of these numbers is 26 × 63 × 78 × 14 = 1788696. What is the greatest product of four adjacent numbers in the same direction (up, down, left, right, or diagonally) in the 20×20 grid? Solution 1 2 3 4</description></item><item><title>Sub-string divisibility</title><link>https://noahlias.github.io/post/euler_43/</link><pubDate>Tue, 22 Nov 2022 17:56:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_43/</guid><description>Problem 43 Description The number, 1406357289, is a 0 to 9 pandigital number because it is made up of each of the digits 0 to 9 in some order, but it also has a rather interesting sub-string divisibility property. Let $d_1$ be the 1st digit, $d_2$ be the 2nd digit, and so on. In this way, we note the following: $d_2d_3d_4=406$ is divisible by 2 $d_3d_4d_5=063$ is divisible by 3</description></item><item><title>Pandigital products</title><link>https://noahlias.github.io/post/euler_32/</link><pubDate>Tue, 22 Nov 2022 13:31:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_32/</guid><description>Problem 32 Description We shall say that an n-digit number is pandigital if it makes use of all the digits 1 to n exactly once; for example, the 5-digit number, 15234, is 1 through 5 pandigital. The product 7254 is unusual, as the identity, 39 × 186 = 7254, containing multiplicand, multiplier, and product is 1 through 9 pandigital. Find the sum of all products whose multiplicand/multiplier/product identity can be</description></item><item><title>Pandigital prime</title><link>https://noahlias.github.io/post/euler_41/</link><pubDate>Tue, 22 Nov 2022 11:15:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_41/</guid><description>Problem 41 Description We shall say that an n-digit number is pandigital if it makes use of all the digits 1 to n exactly once. For example, 2143 is a 4-digit pandigital and is also prime. What is the largest n-digit pandigital prime that exists? Solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>Pandigital multiples</title><link>https://noahlias.github.io/post/euler_38/</link><pubDate>Mon, 21 Nov 2022 19:48:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_38/</guid><description>Problem 38 Description Take the number 192 and multiply it by each of 1, 2, and 3: 192 × 1 = 192 192 × 2 = 384 192 × 3 = 576 By concatenating each product we get the 1 to 9 pandigital, 192384576. We will call 192384576 the concatenated product of 192 and (1,2,3) The same can be achieved by starting with 9 and multiplying by 1, 2, 3,</description></item><item><title>Counting Sundays</title><link>https://noahlias.github.io/post/euler_19/</link><pubDate>Mon, 21 Nov 2022 14:45:03 +0800</pubDate><guid>https://noahlias.github.io/post/euler_19/</guid><description>Problem 19 Description You are given the following information, but you may prefer to do some research for yourself. 1 Jan 1900 was a Monday. Thirty days has September, April, June and November. All the rest have thirty-one, Saving February alone, Which has twenty-eight, rain or shine. And on leap years, twenty-nine. A leap year occurs on any year evenly divisible by 4, but not on century unless it is</description></item><item><title>Lab06_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab06/</link><pubDate>Fri, 18 Nov 2022 19:33:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab06/</guid><description>模型, 统计, 损失函数 损失函数 损失函数是我们用来确定我们模型的最佳参数的。 损失函数是对一个模型能够预测预期结果的程度的一种衡量。换句话说，它衡</description></item><item><title>Lab07_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab07/</link><pubDate>Fri, 18 Nov 2022 19:33:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab07/</guid><description>线性回归 先从一个图例来认识线性回归 下面用这个公式来实现线性回归 样例数据集 $$\hat{y_i} = \bar{y} + r \frac{SD(y)}{SD(x)} (x_i - \bar{x})$$ x 为账单,y 为小费 r为相关系数 1 2 3 4 5 6 x_bar = np.mean(tips[&amp;#34;total_bill&amp;#34;]) y_bar</description></item><item><title>Lab05_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab05/</link><pubDate>Wed, 16 Nov 2022 19:16:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab05/</guid><description>Question 1 Question 1a Suppose we wanted to build a histogram of our data to understand the distribution of literacy rates and income per capita individually. We can use countplot in seaborn to create bar charts from categorical data.
1 2 3 4 5 6 7 8 9 10 11 12 plt.figure(figsize=(15,5)) plt.subplot(1,2,1) sns.countplot(df[&amp;#39;lit&amp;#39;]) plt.xlabel(&amp;#34;Adult literacy rate: Female: % ages 15 and older: 2005-14&amp;#34;) plt.title(&amp;#39;World Bank Female Adult Literacy Rate&amp;#39;) plt.</description></item><item><title>Lab04_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab04/</link><pubDate>Wed, 16 Nov 2022 10:16:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab04/</guid><description>Question 1 dataset
Question 1a Above, it seems like OFFENSE is more specific than CVLEGEND, e.g. &amp;ldquo;LARCENY&amp;rdquo; vs. &amp;ldquo;THEFT FELONY (OVER $950)&amp;rdquo;. If you&amp;rsquo;re unfamiliar with the term, &amp;ldquo;larceny&amp;rdquo; is a legal term for theft of personal property.
To get a sense of how many subcategories there are for each OFFENSE, set calls_by_cvlegend_and_offense equal to a multi-indexed series where the data is first indexed on the CVLEGEND and then on the OFFENSE, and the data is equal to the number of offenses in the database that match the respective CVLEGEND and OFFENSE.</description></item><item><title>Lab03_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab03/</link><pubDate>Wed, 16 Nov 2022 00:19:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab03/</guid><description>Question 1 Question 1a For a DataFrame d, you can add a column with d['new column name'] = ... and assign a list or array of values to the column. Add a column of integers containing 1, 2, 3, and 4 called rank1 to the fruit_info table which expresses your personal preference about the taste ordering for each fruit (1 is tastiest; 4 is least tasty).
Question 1b You can also add a column to d with d.</description></item><item><title>Count Complete Tree Nodes</title><link>https://noahlias.github.io/post/count-complete-tree-nodes/</link><pubDate>Tue, 15 Nov 2022 23:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/count-complete-tree-nodes/</guid><description>222.Count Complete Tree Nodes Description Given the root of a complete binary tree, return the number of the nodes in the tree. According to Wikipedia, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between 1 and $2^h$ nodes inclusive at the last level h. Design an algorithm that</description></item><item><title>Lab02_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab02/</link><pubDate>Tue, 15 Nov 2022 20:16:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab02/</guid><description>dataset
Question 1 For this question we will use SQL to extract data out of the indiv_sample_nyc table. The schema for this table is given below.
Question 1a Let&amp;rsquo;s start by looking at 2016 election contributions made by Donald Trump, who was a NY resident during that year. Write a SQL statement that will return the cmte_id, transaction_amt, and name for every contribution made by any donor with &amp;ldquo;DONALD&amp;rdquo; and &amp;ldquo;TRUMP&amp;rdquo; in their name.</description></item><item><title>Lab01_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab01/</link><pubDate>Tue, 15 Nov 2022 16:06:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab01/</guid><description>Question 1 Question 1a Write a function summation that evaluates the following summation for $n \geq 1$:
$$\sum_{i=1}^{n} i^3 + 3 i^2$$
1 2 3 4 def summation(n): &amp;#34;&amp;#34;&amp;#34;Compute the summation i^3 + 3 * i^2 for 1 &amp;lt;= i &amp;lt;= n.&amp;#34;&amp;#34;&amp;#34; ... return sum(i**3+3*i**2 for i in range(1,n+1)) Question 1b Write a function elementwise_list_sum that computes the square of each value in list_1, the cube of each value in list_2, then returns a list containing the element-wise sum of these results.</description></item><item><title>ML for Finance in Python</title><link>https://noahlias.github.io/post/machine-learning-for-finance-in-python/</link><pubDate>Wed, 09 Nov 2022 18:07:00 +0800</pubDate><guid>https://noahlias.github.io/post/machine-learning-for-finance-in-python/</guid><description>Description Preparing data and a linear model Machine learning tree methods Neural networks and KNN Machine learning with modern portfolio theory 这门课是基于DataCamp, 其实前面很大一部分都是在介绍python中的一些科学工具包: Numpy Pandas Matplotlib Seaborn</description></item><item><title>二叉树</title><link>https://noahlias.github.io/post/binarytree/</link><pubDate>Wed, 23 Feb 2022 12:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/binarytree/</guid><description>二叉树 前序遍历 根节点-&amp;gt; 左孩子-&amp;gt; 右孩子 中序遍历 左孩子-&amp;gt; 根节点-&amp;gt; 右孩子 后序遍历 左孩子-&amp;gt;右孩子-&amp;gt; 根</description></item><item><title>从尾到头打印链表</title><link>https://noahlias.github.io/post/sword_offer_06/</link><pubDate>Wed, 23 Feb 2022 12:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/sword_offer_06/</guid><description>从尾到头打印链表 输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。 示例1 1 2 **输入** head = [1,3,2] **输出** [2,3,1] 限制 0 &amp;lt;= 链表长</description></item><item><title>动态规划</title><link>https://noahlias.github.io/post/dp/</link><pubDate>Wed, 23 Feb 2022 12:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/dp/</guid><description>动态规划 若确定给定问题具有重叠子问题和最优子结构，那么就可以使用动态规划求解。总体上看，求解可分为四步 状态定义: 构建问题最优解模型，包括问题</description></item><item><title>反转链表</title><link>https://noahlias.github.io/post/sword_offfer_24/</link><pubDate>Wed, 23 Feb 2022 12:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/sword_offfer_24/</guid><description>反转链表 定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点. 示例 1 2 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL 输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL 限制： 0 &amp;lt;= 节点个数 &amp;lt;= 5000 解法 1 2 3 4 5</description></item><item><title>把字符串转成整数</title><link>https://noahlias.github.io/post/sword_offer_67/</link><pubDate>Wed, 23 Feb 2022 12:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/sword_offer_67/</guid><description>字符串转成整数 示例1 输入:&amp;ldquo;42&amp;rdquo; 输出: 42 示例 2: 输入: &amp;quot; -42&amp;quot; 输出: -42 解释: 第一个非空白字符为 &amp;lsquo;-&amp;rsquo;, 它是一个负号。 我们尽可能</description></item><item><title>替换空格</title><link>https://noahlias.github.io/post/sword_offer_05/</link><pubDate>Wed, 23 Feb 2022 12:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/sword_offer_05/</guid><description>替换空格 请实现一个函数，把字符串 s 中的每个空格替换成&amp;quot;%20&amp;quot;。 示例 1 1 2 **输入**：s = &amp;#34;We are happy.&amp;#34; 输出：&amp;#34;We%</description></item><item><title>用两个栈实现队列</title><link>https://noahlias.github.io/post/sword_offer_09/</link><pubDate>Wed, 23 Feb 2022 12:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/sword_offer_09/</guid><description>用两个栈实现队列 用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队</description></item><item><title>表示数值的字符串</title><link>https://noahlias.github.io/post/sword_offer_20/</link><pubDate>Wed, 23 Feb 2022 12:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/sword_offer_20/</guid><description>数值字符串 解法 本题使用有限状态自动机。根据字符类型和合法数值的特点，先定义状态，再画出状态转移图，最后编写代码即可。 字符类型： 空格 「 」、数字</description></item></channel></rss>
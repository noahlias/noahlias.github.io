<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MatPlotlib on Alias's Blog</title><link>https://noahlias.github.io/tags/matplotlib/</link><description>Recent content in MatPlotlib on Alias's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 16 Nov 2022 10:16:03 +0800</lastBuildDate><atom:link href="https://noahlias.github.io/tags/matplotlib/index.xml" rel="self" type="application/rss+xml"/><item><title>Lab04_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab04/</link><pubDate>Wed, 16 Nov 2022 10:16:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab04/</guid><description>Question 1 dataset
Question 1a Above, it seems like OFFENSE is more specific than CVLEGEND, e.g. &amp;ldquo;LARCENY&amp;rdquo; vs. &amp;ldquo;THEFT FELONY (OVER $950)&amp;rdquo;. If you&amp;rsquo;re unfamiliar with the term, &amp;ldquo;larceny&amp;rdquo; is a legal term for theft of personal property.
To get a sense of how many subcategories there are for each OFFENSE, set calls_by_cvlegend_and_offense equal to a multi-indexed series where the data is first indexed on the CVLEGEND and then on the OFFENSE, and the data is equal to the number of offenses in the database that match the respective CVLEGEND and OFFENSE.</description></item><item><title>Lab02_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab02/</link><pubDate>Tue, 15 Nov 2022 20:16:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab02/</guid><description>dataset
Question 1 For this question we will use SQL to extract data out of the indiv_sample_nyc table. The schema for this table is given below.
Question 1a Let&amp;rsquo;s start by looking at 2016 election contributions made by Donald Trump, who was a NY resident during that year. Write a SQL statement that will return the cmte_id, transaction_amt, and name for every contribution made by any donor with &amp;ldquo;DONALD&amp;rdquo; and &amp;ldquo;TRUMP&amp;rdquo; in their name.</description></item><item><title>Lab01_WriteUp</title><link>https://noahlias.github.io/post/ds100_lab01/</link><pubDate>Tue, 15 Nov 2022 16:06:03 +0800</pubDate><guid>https://noahlias.github.io/post/ds100_lab01/</guid><description>Question 1 Question 1a Write a function summation that evaluates the following summation for $n \geq 1$:
$$\sum_{i=1}^{n} i^3 + 3 i^2$$
1 2 3 4 def summation(n): &amp;#34;&amp;#34;&amp;#34;Compute the summation i^3 + 3 * i^2 for 1 &amp;lt;= i &amp;lt;= n.&amp;#34;&amp;#34;&amp;#34; ... return sum(i**3+3*i**2 for i in range(1,n+1)) Question 1b Write a function elementwise_list_sum that computes the square of each value in list_1, the cube of each value in list_2, then returns a list containing the element-wise sum of these results.</description></item></channel></rss>
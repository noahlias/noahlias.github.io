<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lambda on Noahlias's Blog</title><link>https://noahlias.github.io/tags/lambda/</link><description>Recent content in Lambda on Noahlias's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 27 Feb 2023 22:27:00 +0800</lastBuildDate><atom:link href="https://noahlias.github.io/tags/lambda/index.xml" rel="self" type="application/rss+xml"/><item><title>Higher-Order Function</title><link>https://noahlias.github.io/post/higher_order_function/</link><pubDate>Mon, 27 Feb 2023 22:27:00 +0800</pubDate><guid>https://noahlias.github.io/post/higher_order_function/</guid><description>Lab02 lambda_curry 匿名函数的柯理化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def lambda_curry2(func): &amp;#34;&amp;#34;&amp;#34; Returns a Curried version of a two-argument function FUNC. &amp;gt;&amp;gt;&amp;gt; from operator import add, mul, mod &amp;gt;&amp;gt;&amp;gt; curried_add = lambda_curry2(add) &amp;gt;&amp;gt;&amp;gt; add_three = curried_add(3) &amp;gt;&amp;gt;&amp;gt; add_three(5) 8 &amp;gt;&amp;gt;&amp;gt; curried_mul = lambda_curry2(mul) &amp;gt;&amp;gt;&amp;gt; mul_5 = curried_mul(5) &amp;gt;&amp;gt;&amp;gt; mul_5(42) 210 &amp;gt;&amp;gt;&amp;gt; lambda_curry2(mod)(123)(10) 3</description></item></channel></rss>
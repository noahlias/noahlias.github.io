<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LeetCode_Medium on Alias's Blog</title><link>https://noahlias.github.io/tags/leetcode_medium/</link><description>Recent content in LeetCode_Medium on Alias's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 15 Nov 2022 23:55:03 +0800</lastBuildDate><atom:link href="https://noahlias.github.io/tags/leetcode_medium/index.xml" rel="self" type="application/rss+xml"/><item><title>Count Complete Tree Nodes</title><link>https://noahlias.github.io/post/count-complete-tree-nodes/</link><pubDate>Tue, 15 Nov 2022 23:55:03 +0800</pubDate><guid>https://noahlias.github.io/post/count-complete-tree-nodes/</guid><description>222.Count Complete Tree Nodes Description Given the root of a complete binary tree, return the number of the nodes in the tree. According to Wikipedia, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between 1 and $2^h$ nodes inclusive at the last level h. Design an algorithm that</description></item></channel></rss>